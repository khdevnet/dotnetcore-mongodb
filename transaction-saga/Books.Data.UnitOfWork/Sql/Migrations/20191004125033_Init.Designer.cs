// <auto-generated />
using System;
using Books.Data.UnitOfWork.Sql.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Books.Data.UnitOfWork.Sql.Migrations
{
    [DbContext(typeof(BooksSqlDbContext))]
    [Migration("20191004125033_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Books.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnName("author")
                        .HasMaxLength(255);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnName("path");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("book");

                    b.HasData(
                        new
                        {
                            Id = new Guid("497a8e1f-809f-4185-b486-71818a3d7e55"),
                            Author = "Clarke, Arthur C",
                            Path = "books\\clarke_arthur_c_a_space_odissey.pdf",
                            Status = 2,
                            Title = "A Space Odissey"
                        },
                        new
                        {
                            Id = new Guid("afc79c66-9d61-4345-bc42-69b06e369054"),
                            Author = "Heinlein, Robert Anson",
                            Path = "books\\heinlein_robert_anson_a_tenderfoot_in_space.pdf",
                            Status = 2,
                            Title = "A tenderfoot in space"
                        },
                        new
                        {
                            Id = new Guid("0cd4ad05-3bc9-4062-bcdb-c02c04041319"),
                            Author = "Niven, Larry",
                            Path = "books\\niven_larry_a_hole_in_space.pdf",
                            Status = 2,
                            Title = "A Hole in Space"
                        });
                });

            modelBuilder.Entity("Books.Domain.Books.BookSagaEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnName("event_data");

                    b.Property<string>("EventDataType")
                        .IsRequired()
                        .HasColumnName("event_data_type");

                    b.Property<Guid>("SagaId")
                        .HasColumnName("saga_id");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("book_saga");
                });
#pragma warning restore 612, 618
        }
    }
}
